<?php

namespace CodeEduBook\Providers;

use Illuminate\Routing\Router;
use Illuminate\Foundation\Support\Providers\RouteServiceProvider as ServiceProvider;
use CodeEduBook\Repositories\BookRepository;
use CodeEduBook\Criteria\FindByAuthorCriteria;

class RouteServiceProvider extends ServiceProvider
{
    /**
     * The root namespace to assume when generating URLs to actions.
     *
     * @var string
     */
    protected $rootUrlNamespace = 'CodeEduBook\Http\Controllers';

    /**
     * Called before routes are registered.
     *
     * Register any model bindings or pattern based filters.
     *
     * @param  Router $router
     * @return void
     */
    public function before(Router $router)
    {
        //
    }

    /**
     * Define the routes for the application.
     *
     * @return void
     */
    public function map(Router $router)
    {

        \Route::group(['middleware' => 'web', 'namespace' => $this->rootUrlNamespace], function()
        {
            require __DIR__ . '/../Http/routes.php';

        });

        // require __DIR__ . '/../Http/routes.php';
    }

    /**
     * Bootstrap any application services.
     *
     * @return void
     */
    public function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub
        \Route::bind('book', function($value){
            $repository = app(BookRepository::class);
            $repository->pushCriteria(new FindByAuthorCriteria());
            return $repository->find($value);
        });
    }


}
